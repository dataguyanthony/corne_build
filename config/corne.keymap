/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
        mouse_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {    
        behaviors {
            td0: shift_capsword {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp LSHFT>, <&kt LSHFT>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp BSPC           &kp Q              &kp W              &kp E              &kp R              &kp T              &kp Y              &kp U              &kp I              &kp O              &kp P              &kp BSLH
   &kp TAB            &kp A              &kp S              &kp D              &kp F              &kp G              &kp H              &kp J              &kp K              &kp L              &kp SEMI           &kp SQT
   &td0               &mt LCTRL Z        &kp X              &kp C              &kp V              &kp B              &kp N              &kp M              &kp COMMA          &kp DOT            &mt RCTRL FSLH     &kp RSHFT
                                                            &kp LALT           &mt LGUI LG(SPACE) &lt 1 SPACE        &lt 2 RET          &kp RCTRL          &kp RGUI
                        >;
                };

                lower_layer {
                        bindings = <
   &kp ESC            &kp EXCL           &kp AT             &kp HASH           &kp DLLR           &kp PRCNT          &kp CARET          &kp AMPS           &kp KP_MULTIPLY    &kp LPAR           &kp RPAR           &kp PIPE  
   &trans             &kp LBRC           &kp LBKT           &kp RBKT           &kp RBRC           &kp EQUAL          &mt HOME LEFT      &kp DOWN           &kp UP             &mt END RIGHT      &kp UNDER          &kp GRAVE
   &trans             &kp LG(LS(N5))     &none              &kp LG(LS(N4))     &kp LG(LC(LS(N4))) &kp PLUS           &none              &kp PG_DN          &kp PG_UP          &none              &mt RCTRL MINUS    &kp TILDE
                                                            &trans             &trans             &trans             &trans             &trans             &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &kp DEL            &kp F9             &kp F10            &kp F11            &kp F12            &trans             &kp DLLR           &kp N7             &kp N8             &kp N9             &kp STAR           &kp SLASH
   &trans             &kp F5             &kp F6             &kp F7             &kp F8             &kp EQUAL          &kp SEMI           &kp N4             &kp N5             &kp N6             &kp PLUS           &kp MINUS
   &trans             &kp F1             &kp F2             &kp F3             &kp F4             &trans             &kp PRCNT          &kp N1             &kp N2             &kp N3             &kp DOT            &kp EQUAL
                                                            &trans             &trans             &trans             &trans             &trans             &kp N0
                        >;
                };

                adjust_layer {
                        bindings = <
   &sys_reset             &kp C_PP           &kp C_MUTE         &kp C_VOL_DN       &kp C_VOL_UP       &none              &none              &bt BT_CLR         &none              &none              &none              &sys_reset
   &none              &none              &none              &kp LC(LEFT)       &kp LC(RIGHT)      &none              &bt BT_PRV         &bt BT_SEL 0       &bt BT_NXT         &none              &none              &none
   &bootloader        &kp C_BRI_DN       &kp C_BRI_UP       &kp LC(UP)         &kp LG(DOWN)       &none              &none              &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 2       &bt BT_SEL 2       &none
                                                            &trans             &trans             &trans             &trans             &trans             &trans
                        >;
                };
        };
};